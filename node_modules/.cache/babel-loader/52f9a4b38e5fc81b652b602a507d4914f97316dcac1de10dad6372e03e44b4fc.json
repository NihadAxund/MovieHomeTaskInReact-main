{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nihad\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\MovieHomeTaskInReact-main\\\\src\\\\components\\\\AddMovieModal\\\\AddMovieModal.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Modal, Button, Form } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddMovieModal = ({\n  open,\n  onClose,\n  onAddMovie\n}) => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [trailer, setTrailer] = useState(\"\");\n  const [isValidTrailer, setIsValidTrailer] = useState(true); // State to track validity\n\n  const handleSubmit = () => {\n    // Create a movie object with the entered data\n    const newMovie = {\n      name: title,\n      description: description,\n      trailer: trailer\n    };\n\n    // Check the validity of the trailer URL\n    const isTrailerValid = isValidYouTubeUrl(trailer);\n    setIsValidTrailer(isTrailerValid);\n\n    // If the trailer URL is valid, proceed with adding the movie\n    if (isTrailerValid) {\n      // Pass the new movie object to the parent component for handling\n      onAddMovie(newMovie);\n\n      // Clear the form fields\n      setTitle(\"\");\n      setTrailer(\"\");\n      setDescription(\"\");\n\n      // Close the modal\n      onClose();\n    }\n  };\n\n  // Regular expression to validate YouTube URLs\n  const youtubeUrlPattern = /^(https?:\\/\\/)?(www\\.)?youtube\\.com\\/watch\\?v=([A-Za-z0-9_\\-]+)/;\n  const isValidYouTubeUrl = url => {\n    return youtubeUrlPattern.test(url);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: onClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: \"Add a New Movie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Title\",\n          placeholder: \"Enter movie title\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Trailer\",\n          placeholder: \"Enter movie trailer URL (YouTube)\",\n          value: trailer,\n          onChange: e => setTrailer(e.target.value),\n          required: true,\n          error: !isValidTrailer // Highlight the input if it's not valid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), !isValidTrailer && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"red\"\n          },\n          children: \"Please enter a valid YouTube trailer URL.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Form.TextArea, {\n          label: \"Description\",\n          placeholder: \"Enter movie description\",\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          positive: true,\n          children: \"Add Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(AddMovieModal, \"hINXCLCf5XfIXXKd4oFzNFmcKVU=\");\n_c = AddMovieModal;\nexport default AddMovieModal;\nvar _c;\n$RefreshReg$(_c, \"AddMovieModal\");","map":{"version":3,"names":["React","useState","Modal","Button","Form","jsxDEV","_jsxDEV","AddMovieModal","open","onClose","onAddMovie","_s","title","setTitle","description","setDescription","trailer","setTrailer","isValidTrailer","setIsValidTrailer","handleSubmit","newMovie","name","isTrailerValid","isValidYouTubeUrl","youtubeUrlPattern","url","test","children","Header","fileName","_jsxFileName","lineNumber","columnNumber","Content","onSubmit","Input","label","placeholder","value","onChange","e","target","required","error","style","color","TextArea","type","positive","_c","$RefreshReg$"],"sources":["C:/Users/nihad/OneDrive/Masaüstü/MovieHomeTaskInReact-main/src/components/AddMovieModal/AddMovieModal.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, Form } from \"semantic-ui-react\";\n\nconst AddMovieModal = ({ open, onClose, onAddMovie }) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [trailer, setTrailer] = useState(\"\");\n  const [isValidTrailer, setIsValidTrailer] = useState(true); // State to track validity\n\n  const handleSubmit = () => {\n    // Create a movie object with the entered data\n    const newMovie = {\n      name: title,\n      description: description,\n      trailer: trailer\n    };\n\n    // Check the validity of the trailer URL\n    const isTrailerValid = isValidYouTubeUrl(trailer);\n    setIsValidTrailer(isTrailerValid);\n\n    // If the trailer URL is valid, proceed with adding the movie\n    if (isTrailerValid) {\n      // Pass the new movie object to the parent component for handling\n      onAddMovie(newMovie);\n\n      // Clear the form fields\n      setTitle(\"\");\n      setTrailer(\"\");\n      setDescription(\"\");\n\n      // Close the modal\n      onClose();\n    }\n  };\n\n  // Regular expression to validate YouTube URLs\n  const youtubeUrlPattern = /^(https?:\\/\\/)?(www\\.)?youtube\\.com\\/watch\\?v=([A-Za-z0-9_\\-]+)/;\n\n  const isValidYouTubeUrl = (url) => {\n    return youtubeUrlPattern.test(url);\n  };\n\n  return (\n    <Modal open={open} onClose={onClose}>\n      <Modal.Header>Add a New Movie</Modal.Header>\n      <Modal.Content>\n        <Form onSubmit={handleSubmit}>\n          <Form.Input\n            label=\"Title\"\n            placeholder=\"Enter movie title\"\n            value={title}\n            onChange={(e) => setTitle(e.target.value)}\n            required\n          />\n          <Form.Input\n            label=\"Trailer\"\n            placeholder=\"Enter movie trailer URL (YouTube)\"\n            value={trailer}\n            onChange={(e) => setTrailer(e.target.value)}\n            required\n            error={!isValidTrailer} // Highlight the input if it's not valid\n          />\n          {!isValidTrailer && (\n            <p style={{ color: \"red\" }}>Please enter a valid YouTube trailer URL.</p>\n          )}\n          <Form.TextArea\n            label=\"Description\"\n            placeholder=\"Enter movie description\"\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            required\n          />\n          <Button type=\"submit\" positive>\n            Add Movie\n          </Button>\n        </Form>\n      </Modal.Content>\n    </Modal>\n  );\n};\n\nexport default AddMovieModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}